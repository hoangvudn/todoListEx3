{"version":3,"sources":["actions/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","containers/SearchTodo.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["nextTodoId","VisibilityFilters","Link","active","children","onClick","disabled","style","marginLeft","connect","state","ownProps","filter","visibilityFilter","dispatch","type","Footer","FilterLink","inputTitle","inputCreator","inputDescription","className","ref","node","e","textTitle","textCreator","textDescription","preventDefault","value","trim","id","Todo","completed","handleDeleteTask","handleEditTask","textInput","status","textDecoration","TodoList","todos","toggleTodo","removeTodo","editTodo","map","todo","text","getVisibleTodos","t","Error","placeholder","App","to","path","VisibleTodoList","action","arrList","item","combineReducers","store","createStore","rootReducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a00aea6.chunk.js","sourcesContent":["let nextTodoId = 0\nexport const addTodo = (textTitle, textCreator, textDescription) => ({\n  type: 'ADD_TODO',\n  id: nextTodoId++,\n  textTitle,\n  textCreator,\n  textDescription\n})\nexport const searchTodo = (textTitle) => ({\n  type: 'SEARCH_TODO',\n  textTitle\n})\nexport const removeTodo = id => ({\n   type: 'DELETE_TODO',\n   id: id\n})\nexport const editTodo = (id,text) => ({\n   type: 'EDIT_TODO',\n   id: id,\n   text\n})\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n})\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id\n})\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ active, children, onClick }) => (\n    <button\n       onClick={onClick}\n       disabled={active}\n       style={{\n           marginLeft: '4px',\n       }}\n    >\n      {children}\n    </button>\n)\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Link\n","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n","import React from 'react'\nimport FilterLink from '../containers/FilterLink'\nimport { VisibilityFilters } from '../actions'\n\nconst Footer = () => (\n  <div>\n    <span>Show: </span>\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>\n      All\n    </FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>\n      Active\n    </FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\n      Completed \n    </FilterLink>\n  </div>\n)\n\nexport default Footer\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from '../actions'\nimport '../styles/index.scss'\n\nconst AddTodo = ({ dispatch }) => {\n  let inputTitle\n  let inputCreator\n  let inputDescription\n\n  return (\n    <div>\n      <form /*onSubmit={e => {\n        e.preventDefault()\n        if (!inputTitle.value.trim() || !inputCreator.value.trim()  || !inputDescription.value.trim()) {\n          return\n        }\n        dispatch(addTodo(inputTitle.value, inputCreator.value, inputDescription.value))\n        inputTitle.value = '';\n        inputCreator.value = '';\n        inputDescription.value = '';\n      }}*/>\n        <div className=\"blockNewTask\">\n          <div className=\"blockNewTask__inputData\">\n            <div className=\"blockNewTask__itemList\">\n               <span>Title:</span>\n               <input className=\"blockNewTask__inputTitle\" ref={node => inputTitle = node} />\n            </div>\n            <div className=\"blockNewTask__itemList\">\n               <span>Creator:</span>\n               <input className=\"blockNewTask__inputCreator\" ref={node => inputCreator = node} />\n            </div>\n            <div className=\"blockNewTask__itemList\">\n                <span>Description:</span>\n               <input className=\"blockNewTask__inputDescription\" ref={node => inputDescription = node} />\n            </div> \n          </div>\n          <div className=\"blockNewTask__buttonAddToDo\">\n            <span onClick={e => {\n                  e.preventDefault()\n                  if (!inputTitle.value.trim() || !inputCreator.value.trim()  || !inputDescription.value.trim()) {\n                    return\n                  }\n                  dispatch(addTodo(inputTitle.value, inputCreator.value, inputDescription.value))\n                  inputTitle.value = '';\n                  inputCreator.value = '';\n                  inputDescription.value = '';\n            }}>\n              SAVE\n            </span>\n          </div>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default connect()(AddTodo)\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n// function IsEditing() {\n//   const [isEditing, setEditing] = useState(false);\n// }\nconst Todo = ({ onClick, handleDeleteTask, handleEditTask, textInput, completed, textTitle, textCreator, textDescription, status }) => ( \n    <div >\n      <li \n          onClick={onClick}\n          style={{\n            textDecoration: completed ? 'line-through' : 'none'\n          }}\n      >\n       \n           <div className=\"blockItemTaskList__itemTaskList\">\n              <span> Title: {textTitle} </span> \n              <span> Creator: {textCreator} </span>\n              <span> Description: {textDescription} </span> \n              <span> Status: {status}</span>\n            </div>  \n      </li>\n      {/*<span onClick={handleDeleteTask}>Delete</span>\n      <div>\n          <input type=\"text\" placeholder={textTitle} ></input>\n          <span onClick={handleEditTask}>Edit</span>\n        </div>*/}\n    </div>\n)\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  texta: PropTypes.string.isRequired\n}\n\nexport default Todo\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Todo from './Todo'\n\nconst TodoList = ({ todos, toggleTodo, removeTodo, editTodo }) => (\n  <ul className=\"blockItemTaskList\">\n    {todos.map(todo =>\n      <Todo\n        key={todo.id}\n        {...todo}\n        onClick={() => toggleTodo(todo.id)}\n        handleDeleteTask={() => removeTodo(todo.id)}\n        handleEditTask={() => editTodo(todo.text)}\n      />\n    )}\n  </ul>\n)\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired,\n    texta: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n}\n\nexport default TodoList\n","import { connect } from 'react-redux'\nimport { toggleTodo, removeTodo, editTodo } from '../actions'\nimport TodoList from '../components/TodoList'\nimport { VisibilityFilters } from '../actions'\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed)\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed)\n    default:\n      throw new Error('Unknown filter: ' + filter)\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id)),\n  removeTodo: id => dispatch(removeTodo(id)),\n  editTodo: (id,text) => dispatch(editTodo(id,text))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { searchTodo } from '../actions'\r\nimport '../styles/index.scss'\r\n\r\nconst SearchTodo= ({ dispatch }) => {\r\n  let inputTitle\r\n  return (\r\n    <div>\r\n      <form>\r\n        <div className=\"blockSearchToDo\">\r\n          <div className=\"blockSearchToDo__inputData\">\r\n            <div className=\"blockSearchToDo__itemList\">\r\n               <input className=\"blockSearchToDo__inputTitle\" ref={node => inputTitle = node} placeholder=\"not working...updating...\"/>\r\n            </div>\r\n          </div>\r\n          <div className=\"blockSearchToDo__buttonSearchToDo\">\r\n            <span onClick={e => {\r\n                  e.preventDefault()\r\n                  if (!inputTitle.value.trim()) {\r\n                    return\r\n                  }\r\n                  dispatch(searchTodo(inputTitle.value))\r\n                  //inputTitle.value = '';\r\n            }}>\r\n              SEARCH\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect()(SearchTodo)\r\n","import React from 'react'\nimport Footer from './Footer'\nimport AddTodo from '../containers/AddTodo'\nimport VisibleTodoList from '../containers/VisibleTodoList'\nimport SearchTodo from '../containers/SearchTodo'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst App = () => (\n  /*<div>\n    <AddTodo />\n    <VisibleTodoList />\n    <Footer />\n  </div>*/  \n   <Router>\n      <div>\n         <SearchTodo />\n        <ul className=\"sideBar\"> \n           <li className=\"sideBar__topLeft\">\n             <Link to=\"/AddTodo\"> Creat New Task </Link>\n           </li>\n           <li>\n             <Link to=\"/VisibleTodoList\"> All Task </Link>\n           </li>\n          {/* <li>\n             <Link to=\"/Footer\"> Footer </Link>\n           </li>*/} \n        </ul>\n         \n        <Switch>\n          <Router path=\"/AddTodo\">\n            <AddTodo />\n          </Router>\n          <Router path=\"/VisibleTodoList\">\n            <VisibleTodoList />\n          </Router>\n          <Router path=\"/Footer\">\n            <Footer />\n          </Router>\n        </Switch>\n      </div>\n    </Router>\n)\n\nexport default App\n","const todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          id: action.id,\n          textTitle: action.textTitle,\n          textCreator: action.textCreator,\n          textDescription: action.textDescription,\n          status: \"new\",\n          completed: false\n        }\n      ]\n    case 'SEARCH_TODO':\n      return state.map(todo =>\n        (todo.textTitle === action.textTitle)\n          ? {...todo, textTitle: !todo.textTitle}\n          : todo\n        )\n    case 'TOGGLE_TODO':\n      return state.map(todo =>\n        (todo.id === action.id)\n          ? {...todo, completed: !todo.completed}\n          : todo\n      )\n    case 'DELETE_TODO':\n      // const arrList = [...state];\n      // const indexTask = arrList.findIndex(item => item.id === action.id)\n      // arrList.splice(indexTask,1)\n      //return arrList;\n      return state.filter(todo => todo.id !== action.id);\n    case 'EDIT_TODO':\n    const arrList = [...state];\n          state.map(item => {\n            if(item.id === action.id) {\n                item.text = action.text\n            }\n          });\n    return arrList;\n    default:\n      return state\n  }\n}\n\nexport default todos\n","import { VisibilityFilters } from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter\n","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nexport default combineReducers({\n  todos,\n  visibilityFilter\n})\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}